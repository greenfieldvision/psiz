name: Build, lint, test, and publish distribution to TestPyPI.

on: [push]

jobs:
  build_dist:
    name: Build Python distribution(s)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          pip install build
      - name: Build package
        run: python -m build
      - uses: actions/upload-artifact@v2
        with:
          name: dist-py3
          path: dist/
          if-no-files-found: error
          retention-days: 3

  lint_dist:
    name: Lint and test Python distribution
    needs: build_dist
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: dist-py3
          path: dist/
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          pip install flake8 pylint pytest
          # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install .
      - name: Analyse code with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Analyse code with pylint
        run: |
          pylint --disable=R,C,W --ignored-modules=tensorflow src

  publish_dist:
      name: Publish Python distribution
      needs: build_dist, lint_dist
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: dist-py3
          path: dist/
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: dist/
